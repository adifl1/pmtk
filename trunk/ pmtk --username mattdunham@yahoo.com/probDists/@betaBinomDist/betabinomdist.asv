classdef betaBinomDist < probDist
  
  properties
    a;
    b;
    N;
  end
 
  
  methods 
    function obj =  betaBinomDist(N,a,b)
      % betabinomdist(N, a, b) where args are scalars
      if nargin == 0
        N = []; a = []; b = [];
      end
      obj.a = a;
      obj.b = b;
      obj.N = N;
    end
  
    function d = ndims(obj)
      d = length(obj.a);
    end
    
    function plot(obj)
     % eg plot(betabinomdist(10,2,2))
      figure;
      d = ndims(obj);
      [nr nc] = nsubplots(d);
      for j=1:d
        subplot(nr,nc,j)
        xs = 0:obj.N(j);
        ps = exp(logprob(obj, xs, j));
        bar(ps)
        set(gca,'xticklabel',xs)
        title(sprintf('BetaBinom(N=%d,a=%3.1f,b=%3.1f)', ...
          obj.N(j), obj.a(j), obj.b(j)))
      end
    end
    
    function m = mean(obj)
      m = obj.N * (obj.a ./(obj.a + obj.b));
    end
    
    function m = mode(obj)
      error('not supported');
    end  
    
     function m = var(obj)
       a = obj.a; b = obj.b; n = obj.N;
       m = (N .* a .* b .* (a + b + N)) ./ ( (a+b).^2 .* (a+b+1) );
     end  
     
     function C = cov(obj)
       C = var(obj);
     end
   
     function X = sample(obj, n)
       error('not supported')
     end
    
     function p = logprob(obj, X, paramNdx)
       % p(i,j) = log p(x(i) | params(j))
       if nargin < 3, paramNdx = 1:ndims(obj); end
       x = X(:);
       p = zeros(length(x),length(paramNdx));
       for jj=1:length(paramNdx)
         j = paramNdx(jj);
         a = obj.a(j); b = obj.b(j); n = obj.N(j);
         p(:,jj) = betaln(x+a, n-x+b) - betaln(a,b) + nchoosekln(n, x);
       end
     end
     
     function nll = negloglik(obj, X)
       % nll(j) = -sum_i log p(x(i) | params(j))
       nll = -sum(logprob(obj, X));
     end
     
     function obj = fit(obj, X)
       error('not supported')
     end
    
     function pr = predict(obj, D)
       error('not supported')
     end

     function pr = marginal(obj, nodeNames)
       error('not supported')
     end

     function obj = observe(obj, nodeNames, D)
       error('not supported')
     end
  end
    
end