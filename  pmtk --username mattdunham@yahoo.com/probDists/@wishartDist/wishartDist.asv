classdef wishartDist  < matrixDist
  
  properties
  end
  
  methods
    function m = wishartDist(dof, Sigma)
      % We require Sigma is posdef and dof > d-1
      if nargin == 0
        m.Sigma = [];
        return;
      end
      m.dof = dof;
      m.Sigma = Sigma; % scale maxtrix 
    end
    
    function d = ndims(obj)
      d = size(obj.Sigma,1);
    end
    
    function lnZ = lognormconst(obj)
      d = ndims(obj);
      v = obj.dof;
      S = obj.Sigma;
      lnZ = (v*d/2)*log(2) + mvtGammaln(d,v/2) +(v/2)*logdet(S);
    end
    
     function L = logprob(obj, X)
      % L(i) = log p(X(:,:,i) | theta)
      % If object is scalar, then L(i) = log p(X(i) | theta))
      v = obj.dof;
      d = ndims(obj);
      if d==1
        n = length(X);
        X(find(X==0)) = eps;
        X = reshape(X,[1 1 n]);
      else
        n = size(X,3);
      end
      logZ = lognormconst(obj);
      Sinv = inv(obj.Sigma);
      for i=1:n
        L(i) = (v-d-1)/2*logdet(X(:,:,i)) -0.5*trace(Sinv*X(:,:,i)) - logZ;
      end
      L = L(:);
     end
    
    function m = mean(obj)
      m = obj.dof * obj.Sigma;
    end
    
    function m = mode(obj)
      m = (obj.dof - ndims(obj) - 1) * obj.Sigma;
    end
    
    
    function X = sample(obj, n)
      % X(:,:,i) is a random matrix drawn from Wi() for i=1:n
      d = ndims(obj);
      if nargin < 2, n = 1; end
      X  = zeros(d,d,n);
      [X(:,:,1), D] = wishrnd(obj.Sigma, obj.dof);
      for i=2:n
        X(:,:,i) = wishrnd(obj.Sigma, obj.dof, D);
      end
    end
    
   function mm = marginal(obj, query)
      % If M ~ Wi(dof,S), then M(q,q) ~ Wi(dof, S(q,q))
      % Press (2005) p112
      q = length(query); d = ndims(obj); v = obj.dof;
      mm = wishartDist(v, obj.Sigma(query,query));
   end
    
     function h = plotDemo2d(dummy, seed, doPrint)
       % plot some Wi distributions
       if nargin >= 2
         randn('state',seed);rand('state',seed);
       end
       if nargin < 3, doPrint = false; end
       folder = 'C:\kmurphy\PML\pdfFigures';
       S=randpd(2)
       dof = 20;
       p=wishartDist(dof,S);
       M = mean(p);
       R = cov2cor(M);
       pdffigure(1);clf;plotSamples2d(p,9);
       suptitle(sprintf('Wi(dof=%3.1f, S), E=[%3.1f, %3.1f; %3.1f, %3.1f], %s=%3.1f', ...
         dof, M(1,1), M(1,2), M(2,1), M(2,2), '\rho', R(1,2)));
       if doPrint, print(gcf, '-dpdf', 
       pdffigure(2);clf;plotMarginals(p);
       
       dof = 3;
       p=wishartDist(dof,S);
       M = mean(p);
       R = cov2cor(M);
       pdffigure(3);clf;plotSamples2d(p,9);
       suptitle(sprintf('Wi(dof=%3.1f, S), E=[%3.1f, %3.1f; %3.1f, %3.1f], %s=%3.1f', ...
         dof, M(1,1), M(1,2), M(2,1), M(2,2), '\rho', R(1,2)));
       pdffigure(4);clf;plotMarginals(p);
     end
    
     %{
    function demoPlotSamples(dummy)
      S  = [4 3; 3 4];
      nus = [2 10];
      for j=1:length(nus)
        figure;
        plotSamples(wishartDist(nus(j), S), 9);
        suptitle(sprintf('Wishart(dof=%3.1f,S=[4 3; 3 4])', nus(j)))
      end
    end
    %}
     
  end
    
    
end